FROM node:lts-alpine AS base

# Stage 1: Install dependencies
FROM base AS deps
WORKDIR /app
COPY package.json package-lock.json ./
# We remove corepack enable pnpm and use npm instead
RUN npm ci

# Stage 2: Build the application
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

ARG CONTENTSTACK_API_KEY
ARG CONTENTSTACK_DELIVERY_TOKEN
ARG CONTENTSTACK_ENVIRONMENT
ARG CONTENTSTACK_LIVE_PREVIEW

ENV CONTENTSTACK_API_KEY=$CONTENTSTACK_API_KEY
ENV CONTENTSTACK_DELIVERY_TOKEN=$CONTENTSTACK_DELIVERY_TOKEN
ENV CONTENTSTACK_ENVIRONMENT=$CONTENTSTACK_ENVIRONMENT
ENV CONTENTSTACK_LIVE_PREVIEW=$CONTENTSTACK_LIVE_PREVIEW
ENV OUTPUT_MODE=standalone

# Replace pnpm build with npm run build
RUN npm run build

# Stage 3: Production server
FROM base AS runner
WORKDIR /app
ENV NODE_ENV=production
ENV OUTPUT_MODE=standalone
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static

ENV CONTENTSTACK_API_KEY=$CONTENTSTACK_API_KEY
ENV CONTENTSTACK_DELIVERY_TOKEN=$CONTENTSTACK_DELIVERY_TOKEN
ENV CONTENTSTACK_ENVIRONMENT=$CONTENTSTACK_ENVIRONMENT
ENV CONTENTSTACK_LIVE_PREVIEW=$CONTENTSTACK_LIVE_PREVIEW

EXPOSE 3000
CMD ["node", "server.js"]